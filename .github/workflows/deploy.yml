name: Deploy to Firebase Hosting

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Install Functions dependencies
        run: npm --prefix functions ci

      - name: Set Firebase env vars for Vite
        run: |
          required_vars=(
            VITE_FIREBASE_API_KEY
            VITE_FIREBASE_AUTH_DOMAIN
            VITE_FIREBASE_PROJECT_ID
            VITE_FIREBASE_STORAGE_BUCKET
            VITE_FIREBASE_MESSAGING_SENDER_ID
            VITE_FIREBASE_APP_ID
          )

          for var in "${required_vars[@]}"; do
            value=${!var}
            if [ -z "$value" ]; then
              echo "Missing required secret: $var" >&2
              echo "Add it under Settings ▸ Secrets and variables ▸ Actions." >&2
              exit 1
            fi
            echo "$var=$value" >> "$GITHUB_ENV"
          done
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

      - name: Set Vite env vars
        run: echo "VITE_AI_API_BASE_URL=https://us-central1-cvgenius-985fd.cloudfunctions.net/aiRewrite" >> $GITHUB_ENV

      - name: Verify Groq secret is configured
        run: |
          if [ -z "${GROQ_API_KEY}" ]; then
            echo "GROQ_API_KEY secret is not configured in the repository settings." >&2
            echo "Add it under Settings ▸ Secrets and variables ▸ Actions before deploying." >&2
            exit 1
          fi
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Sync Groq secret to Firebase
        run: |
          if [ -z "${GROQ_API_KEY}" ]; then
            echo "GROQ_API_KEY secret is not available." >&2
            exit 1
          fi
          printf '%s' "$GROQ_API_KEY" | npx firebase functions:secrets:set GROQ_API_KEY --project cvgenius-985fd --force
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}

      - name: Deploy to Firebase Hosting
        run: npx firebase deploy --only hosting,functions --non-interactive --project cvgenius-985fd
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
